osRomBase = 0x80000308;
__dummy = 0x80025F30;
n_alSynFreeFX = 0x8003B040;
myfree = 0x8004CD80;
osSyncPrintf = 0x80052220;
osViExtendVStart = 0x8005223C;
leoInitUnit_atten = 0x800522F0;
__osGetActiveQueue = 0x80052300;
leoDrive_reset = 0x80053498;
__leoSetReset = 0x80053594;
ptstart = 0x8007ED44;
osVoiceControlGain = 0x80089ED0;
n_alSynRemovePlayer = 0x800C7FB0;
osCreateThread = 0x800D2AD0;
osStartThread = 0x800D2C20;
osCreateViManager = 0x800D2D70;
osViSetMode = 0x800D3110;
osViBlack = 0x800D3180;
osViSetSpecialFeatures = 0x800D31F0;
osCreatePiManager = 0x800D33B0;
osSetThreadPri = 0x800D3540;
osCreateMesgQueue = 0x800D3620;
osPiStartDma = 0x800D3650;
osRecvMesg = 0x800D3760;
osPiRawReadIo = 0x800D38A0;
guMtxF2L = 0x800D3900;
guMtxIdentF = 0x800D3A00;
guMtxIdent = 0x800D3A88;
guMtxL2F = 0x800D3AB8;
guRotateRPYF = 0x800D3B70;
guRotateRPY = 0x800D3BC4;
guMtxXFML = 0x800D3C10;
guMtxCatL = 0x800D3C70;
__sinf = 0x800D3CD0;
guTranslateF = 0x800D3E90;
guTranslate = 0x800D3ED8;
guAlign = 0x800D40C4;
osWritebackDCache = 0x800D4120;
osViSwapBuffer = 0x800D41A0;
_nsqrtf = 0x800D41F0;
__cosf = 0x800D4200;
osSetEventMesg = 0x800D4370;
osContInit = 0x800D43E0;
__osContGetInitData = 0x800D45D8;
__osPackRequestData = 0x800D46A8;
__osPfsGetStatus = 0x800D4854;
osContStartReadData = 0x800D4960;
osContGetReadData = 0x800D4A24;
contreaddata_text_017C = 0x800D4ACC;
guAlignF = 0x800D4C20;
guLookAtF = 0x800D4E30;
guLookAt = 0x800D50E8;
guPerspectiveF = 0x800D5160;
guPerspective = 0x800D5390;
osViSetEvent = 0x800D53F0;
osSetTimer = 0x800D5460;
osSendMesg = 0x800D5540;
osWritebackDCacheAll = 0x800D5690;
sptask_text_0000 = 0x800D56C0;
osSpTaskLoad = 0x800D57CC;
osSpTaskStartGo = 0x800D5934;
osViSetYScale = 0x800D5980;
osVirtualToPhysical = 0x800D59E0;
alUnlink = 0x800D5A60;
alLink = 0x800D5A90;
alClose = 0x800D5AB4;
alInit = 0x800D5AEC;
alHeapDBAlloc = 0x800D5B20;
alCents2Ratio = 0x800D5B80;
osInvalICache = 0x800D5BD0;
osInvalDCache = 0x800D5C50;
alHeapInit = 0x800D5D00;
bnkf_text_0010 = 0x800D5D50;
alBnkfNew = 0x800D5E44;
alSeqFileNew = 0x800D5F48;
osAiSetFrequency = 0x800D5F90;
__CSPPostNextSeqEvent = 0x800D60F0;
csplayer_text_0A90 = 0x800D6B9C;
alCSPNew = 0x800D71B0;
alSeqpSetBank = 0x800D7320;
sndplayer_text_008C = 0x800D73EC;
alSndpNew = 0x800D7934;
alSeqpSetChlPan = 0x800D7A70;
_timeToSamples = 0x800D7AD8;
_freePVoice = 0x800D7B30;
_collectPVoices = 0x800D7B68;
__freeParam = 0x800D7BC8;
__allocParam = 0x800D7BE0;
alAudioFrame = 0x800D7C18;
alSynNew = 0x800D7EB0;
osSpTaskYield = 0x800D81B0;
osSpTaskYielded = 0x800D81D0;
osAiSetNextBuffer = 0x800D8250;
alSndpAllocate = 0x800D8300;
alSndpSetSound = 0x800D83A0;
alSndpSetPitch = 0x800D83C0;
alSndpSetFXMix = 0x800D8420;
alSndpSetPriority = 0x800D8480;
alSndpSetVol = 0x800D84B0;
alSndpSetPan = 0x800D8510;
alSndpPlay = 0x800D8570;
alSndpGetState = 0x800D85E0;
alSndpStop = 0x800D8600;
alSndpDeallocate = 0x800D8650;
n_alSeqpGetState = 0x800D86A0;
alSeqpSetVol = 0x800D86B0;
alSeqpStop = 0x800D86F0;
alSeqpPlay = 0x800D8720;
alSeqpSetTempo = 0x800D8750;
alCSPGetTempo = 0x800D87C0;
alCSeqGetLoc = 0x800D8800;
alCSeqSetLoc = 0x800D88A0;
cseq_text_0140 = 0x800D8940;
cseq_text_0204 = 0x800D8A04;
alCSeqNextEvent = 0x800D8A64;
alCSeqNew = 0x800D8D5C;
alCSeqNewMarker = 0x800D8E70;
alCSeqSecToTicks = 0x800D8FE4;
alCSeqTicksToSec = 0x800D90E0;
__alCSeqNextDelta = 0x800D914C;
alSeqpSetSeq = 0x800D92C0;
guFrustumF = 0x800D9300;
guFrustum = 0x800D9454;
_bzero = 0x800D94C0;
osGetTime = 0x800D9560;
osGetCount = 0x800D95F0;
__ull_rshift = 0x800D9600;
__ull_rem = 0x800D962C;
__ull_div = 0x800D9668;
__ll_lshift = 0x800D96A4;
__ll_div = 0x800D970C;
__ll_mul = 0x800D9768;
__ull_divremi = 0x800D9798;
__ll_mod = 0x800D97F8;
__ll_rshift = 0x800D9894;
osEepromProbe = 0x800D98C0;
osEepromLongWrite = 0x800D9930;
guRandom = 0x800D9BB0;
osPfsIsPlug = 0x800D9BE0;
__osPfsRequestData = 0x800D9D80;
__osPfsGetInitData = 0x800D9E7C;
__osSiCreateAccessQueue = 0x800D9F50;
__osSiGetAccess = 0x800D9FA0;
__osSiRelAccess = 0x800D9FE4;
__osSiRawStartDma = 0x800DA010;
__osContAddressCrc = 0x800DA0C0;
__osContDataCrc = 0x800DA170;
__osContRamWrite = 0x800DA240;
__osContRamRead = 0x800DA5F0;
__osSetSR = 0x800DA9A0;
__osGetSR = 0x800DA9B0;
__osSetFpcCsr = 0x800DA9C0;
__osSpRawReadIo = 0x800DA9D0;
__osSpRawWriteIo = 0x800DAA20;
__osExceptionPreamble = 0x800DAA70;
__osException = 0x800DAA80;
__osEnqueueAndYield = 0x800DB08C;
__osEnqueueThread = 0x800DB18C;
__osPopThread = 0x800DB1D4;
__osDispatchThread = 0x800DB1E4;
__osCleanupThread = 0x800DB360;
__osSetHWIntrRoutine = 0x800DB3D0;
__osDisableInt = 0x800DBCE0;
__osRestoreInt = 0x800DBD00;
__osDequeueThread = 0x800DBD20;
__osTimerServicesInit = 0x800DBD60;
__osTimerInterrupt = 0x800DBDEC;
__osSetTimerIntr = 0x800DBF64;
__osInsertTimer = 0x800DBFD8;
osGetThreadPri = 0x800DC160;
__osViInit = 0x800DC180;
__osViSwapContext = 0x800DC2E0;
__osPiCreateAccessQueue = 0x800DC640;
osPiRawStartDma = 0x800DC700;
osJamMesg = 0x800DCC70;
osPiGetCmdQueue = 0x800DCDC0;
MusPtrBankGetCurrent = 0x800DCDD8;
guMtxXFMF = 0x800DCDF0;
guMtxCatF = 0x800DCE90;
guNormalize = 0x800DD000;
__osSumcalc = 0x800DD090;
__osIdCheckSum = 0x800DD0EC;
__osRepairPackId = 0x800DD154;
__osCheckPackId = 0x800DD56C;
__osGetId = 0x800DD704;
__osCheckId = 0x800DD960;
__osPfsRWInode = 0x800DDA5C;
__osPfsSelectBank = 0x800DDD7C;
osPfsChecker = 0x800DDDF0;
corrupted_init = 0x800DE4B4;
corrupted = 0x800DE668;
_bcopy = 0x800DF510;
__osSpSetStatus = 0x800DF820;
__osSpSetPc = 0x800DF830;
__osSpRawStartDma = 0x800DF870;
__osSpDeviceBusy = 0x800DF900;
__osProbeTLB = 0x800DF930;
alSynDelete = 0x800DF9F0;
__setInstChanState = 0x800DFA00;
__resetPerfChanState = 0x800DFA54;
__initFromBank = 0x800DFAD4;
__vsDelta = 0x800DFB90;
__vsVol = 0x800DFBB4;
__seqpReleaseVoice = 0x800DFC3C;
__voiceNeedsNoteKill = 0x800DFD68;
__unmapVoice = 0x800DFE10;
__postNextSeqEvent = 0x800DFE80;
__vsPan = 0x800DFFD4;
__lookupVoice = 0x800E001C;
__mapVoice = 0x800E0090;
__lookupSoundQuick = 0x800E0100;
seqplayer_text_101C = 0x800E0A1C;
__seqpStopOsc = 0x800E1040;
__initChanState = 0x800E1144;
alSeqpNew = 0x800E11B4;
alEvtqFlushType = 0x800E1340;
alEvtqFlush = 0x800E13EC;
alEvtqPostEvent = 0x800E145C;
alEvtqNextEvent = 0x800E1580;
alEvtqNew = 0x800E160C;
alSynAddPlayer = 0x800E1680;
alSynStopVoice = 0x800E16D0;
alSynFreeVoice = 0x800E1750;
alSynSetVol = 0x800E1800;
alSynSetPitch = 0x800E18A0;
_allocatePVoice = 0x800E1930;
alSynAllocVoice = 0x800E1A18;
alSynStartVoiceParams = 0x800E1B60;
alSynSetPan = 0x800E1C50;
alSynSetFXMix = 0x800E1CE0;
osSetIntMask = 0x800E1D80;
alSynStartVoice = 0x800E1E20;
alSaveNew = 0x800E1EB0;
alMainBusNew = 0x800E1EF4;
alAuxBusNew = 0x800E1F48;
alResampleNew = 0x800E1F9C;
alLoadNew = 0x800E2024;
alEnvmixerNew = 0x800E20CC;
_init_lpfilter = 0x800E2170;
alFxNew = 0x800E2210;
alSynAllocFX = 0x800E2650;
alMainBusPull = 0x800E2720;
alLoadParam = 0x800E2840;
alRaw16Pull = 0x800E2A14;
load_text_0580 = 0x800E2DC0;
alAdpcmPull = 0x800E2EEC;
alResampleParam = 0x800E3390;
alResamplePull = 0x800E347C;
_ldexpf = 0x800E3690;
_frexpf = 0x800E36B8;
alEnvmixerParam = 0x800E37A4;
env_text_03C4 = 0x800E3A54;
env_text_065C = 0x800E3CEC;
alEnvmixerPull = 0x800E3D9C;
alAuxBusParam = 0x800E42F0;
alAuxBusPull = 0x800E4320;
alSaveParam = 0x800E4400;
alSavePull = 0x800E4434;
__osSpGetStatus = 0x800E44C0;
__osAiDeviceBusy = 0x800E44D0;
osEepromWrite = 0x800E4500;
conteepwrite_text_01B0 = 0x800E46B0;
__osEepStatus = 0x800E47BC;
osEepromRead = 0x800E49E0;
conteepread_text_01F0 = 0x800E4BD0;
__osSiDeviceBusy = 0x800E4CE0;
osDestroyThread = 0x800E4D10;
__osSetCompare = 0x800E4F00;
__osResetGlobalIntMask = 0x800E4F10;
osEPiRawWriteIo = 0x800E4F70;
osYieldThread = 0x800E4FC0;
memcpy = 0x800E5010;
strlen = 0x800E503C;
strchr = 0x800E5064;
_Litob = 0x800E50B0;
xldtob_text_0000 = 0x800E5350;
_Ldtob = 0x800E58C0;
alSeqGetLoc = 0x800E5E10;
alSeqSetLoc = 0x800E5E2C;
alSeqGetTicks = 0x800E5E48;
seq_text_0048 = 0x800E5E58;
alSeqNextEvent = 0x800E5EA4;
alSeqNewMarker = 0x800E6028;
alSeqSecToTicks = 0x800E6148;
alSeqTicksToSec = 0x800E622C;
__alSeqNextDelta = 0x800E6280;
seq_text_04AC = 0x800E62D8;
seq_text_04FC = 0x800E6328;
alSeqNew = 0x800E6358;
alSynSetPriority = 0x800E6430;
alCopy = 0x800E6440;
alFilterNew = 0x800E64C0;
_doModFunc = 0x800E64E0;
_filterBuffer = 0x800E6588;
_saveBuffer = 0x800E6640;
_loadBuffer = 0x800E67C8;
_loadOutputBuffer = 0x800E6954;
alFxParamHdl = 0x800E6B78;
alFxParam = 0x800E6DD4;
alFxPull = 0x800E6DEC;
lldiv = 0x800E7130;
ldiv = 0x800E7230;
rspbootTextStart = 0x800E72C0;
gzip_data_0000 = 0x800EA084;
__additional_scanline = 0x800EE6F4;
osClockRate = 0x801143A4;
__OSGlobalIntMask = 0x801143AC;
__osViDevMgr = 0x801143C0;
__osPiDevMgr = 0x80115100;
__osContinitialized = 0x80115120;
alGlobals = 0x80115130;
aisetnextbuf_data_0000 = 0x80115140;
random_data_0000 = 0x80115150;
__osSiAccessQueueEnabled = 0x80115160;
__osThreadTail = 0x80115190;
__osRunQueue = 0x80115198;
__osActiveQueue = 0x8011519C;
__osRunningThread = 0x801151A0;
__osTimerList = 0x801151B0;
__osViCurr = 0x80115220;
__osViNext = 0x80115224;
osViClock = 0x80115228;
__osPiAccessQueueEnabled = 0x80115230;
drvrNew_data_0000 = 0x80115290;
drvrNew_data_0068 = 0x801152F8;
drvrNew_data_00F0 = 0x80115380;
drvrNew_data_0118 = 0x801153A8;
drvrNew_data_0140 = 0x801153D0;
drvrNew_data_0168 = 0x801153F8;
env_data_0000 = 0x80115420;
env_data_00FE = 0x8011551E;
xlitob_data_0000 = 0x80115650;
xlitob_data_0014 = 0x80115664;
sinf_rodata_0000 = 0x8011C760;
sinf_rodata_0028 = 0x8011C788;
sinf_rodata_0030 = 0x8011C790;
sinf_rodata_0038 = 0x8011C798;
rotate_rodata_0000 = 0x8011C7B0;
cosf_rodata_0000 = 0x8011C7C0;
cosf_rodata_0028 = 0x8011C7E8;
cosf_rodata_0030 = 0x8011C7F0;
cosf_rodata_0038 = 0x8011C7F8;
align_rodata_0000 = 0x8011C810;
perspective_rodata_0000 = 0x8011C820;
cents2ratio_rodata_0000 = 0x8011C830;
synthesizer_rodata_0000 = 0x8011CAC0;
synthesizer_rodata_0008 = 0x8011CAC8;
cseq_rodata_0000 = 0x8011CAD0;
cseq_rodata_0008 = 0x8011CAD8;
__libm_qnan_f = 0x8011CB50;
__osRcpImTable = 0x8011CEA0;
drvrNew_rodata_0000 = 0x8011CF20;
drvrNew_rodata_0018 = 0x8011CF38;
resample_rodata_0000 = 0x8011CF40;
resample_rodata_0028 = 0x8011CF68;
resample_rodata_0030 = 0x8011CF70;
env_rodata_0010 = 0x8011CF90;
xldtob_rodata_0000 = 0x8011CFE0;
xldtob_rodata_0048 = 0x8011D028;
xldtob_rodata_004C = 0x8011D02C;
xldtob_rodata_0058 = 0x8011D038;
seq_rodata_0000 = 0x8011D040;
seq_rodata_0008 = 0x8011D048;
reverb_rodata_0000 = 0x8011D050;
reverb_rodata_0020 = 0x8011D070;
vimgr_bss_11C8 = 0x80253B98;
vimgr_bss_11E0 = 0x80253BB0;
vimgr_bss_11F8 = 0x80253BC8;
pimgr_bss_11B0 = 0x80254DA0;
pimgr_bss_11C8 = 0x80254DB8;
rotate_bss_0000 = 0x80254DC0;
__osEventStateTab = 0x80254DD0;
__osContPifRam = 0x80254E50;
__osContLastCmd = 0x80254E90;
__osMaxControllers = 0x80254E91;
__osEepromTimer = 0x80254E98;
__osEepromTimerQ = 0x80254EB8;
__osEepromTimerMsg = 0x80254ED0;
align_bss_0000 = 0x80254EE0;
__osPfsPifRam = 0x80254F30;
__osSiAccessQueue = 0x80254F78;
__osCurrentTime = 0x80255FB4;
__osBaseCounter = 0x80255FB8;
__osViIntrCount = 0x80255FBC;
__osTimerCounter = 0x80255FC0;
__osEepPifRam = 0x80255FF0;
alMainBusParam = 0x800E2660; // type:func rom:0xbda60

//io/motor.c

//osMotorStop = 0x800D2704; // type:func
//osMotorStart = 0x800d25DC; // type:func
//osMotorInit = 0x800D2444; // type:func

CalculateAngleOfVector = 0x800C1B44; // type:func
ActorInit_BattleModeSandCrab = 0x8004852C; // type:func
ActorTick_BattleModeSandCrabSpawner = 0x800489A4; // type:func
ActorTick_Powerup = 0x80049508; // type:func
ActorTick_PickupHeartFalling = 0x8004949C; // type:func
ActorInit_UnkFireSpawner = 0x8004937c; // type:func
ActorTick_UnkFireSpawner = 0x80049384; // type:func
Actors_Tick = 0x800495A8; // type:func
PlaySoundEffect = 0x80082A14; // type:func
DummiedPrintf3 = 0x800D0560; // type:func
Vec3f_Print = 0x800D1644; // type:func

//84E0.c
WrapDegrees = 0x8002C970; // type:func
ClampPointToDisk = 0x8002C9C4; // type:func
CalcAngleBetween2DPoints = 0x8002CA48; // type:func
ReflectAngleToUpperQuadrants = 0x8002CA90; // type:func
IsAngleWithinTolerance = 0x8002CAD4; // type:func
AreAnglesWithin180Degrees = 0x8002CB1C; // type:func
Actors_Init = 0x8002cec0; // type:func
Actor_Init = 0x8002D66C; // type:func
Actor_SpawnAt = 0x8002D888; // type:func
SetPlayerImpulse = 0x8002EFD0; // type:func
pickup_collide_func = 0x800331A8; // type:func
ControlTongue = 0x80034968; // type:func
IsExplodingActor = 0x80036910; // type:func
IsActiveExplosion= 0x80036978; // type:func
//actor funcs
ActorInit_GreyAntSpawner = 0x80037758; // type:func
ActorTick_GreyAntSpawner = 0x8003777C; // type:func
ActorInit_GreyAnt = 0x800378A8; // type:func
ActorTick_GreyAnt = 0x8003790C; // type:func
ActorInit_BulletHellAntSpawner = 0x80037D28; // type:func
ActorTick_BulletHellAntSpawner = 0x80037D34; // type:func
ActorInit_AntBulletHell = 0x80037E78; // type:func
ActorTick_BulletHellAnt = 0x80037F30; // type:func
ActorTick_RedAntSpawner = 0x80037FFC; // type:func
ActorTick_AntTrioSpawner = 0x800381C8; // type:func
ActorInit_AntTrio = 0x800382D4; // type:func
ActorTick_AntTrio = 0x80038340; // type:func
ActorInit_RedAnt = 0x800386CC; // type:func
ActorTick_RedAnt = 0x80038864; // type:func





//math.c
Random = 0x800C1830; // type:func

//8ADD0.c
MoveTheater = 0x800A879C; // type:func
RegistShutter = 0x800A9810; // type:func
LimitInt = 0x800AA918; // type:func
LimitFloat = 0x800AA948; // type:func
IsNotPickup = 0x800AA988; // type:func
IsPickup = 0x800AA9B0; // type:func
IsBossID = 0x800AA9D4; // type:func
IsActorBoss = 0x800AAA10; // type:func
Vec3f_SetAtBossPos = 0x800AB2B0; // type:func
IsBossPresent = 0x800AB34C; // type:func
IsBossStage = 0x800AB3B4; // type:func
IsntNegative = 0x800ABB00; // type:func
ResetStageModels = 0x800ABF50; // type:func
RegistModel = 0x800ABF6C; // type:func
moveModel = 0x800ac194; // type:func
ScaleModel = 0x800AC254; // type:func
RotateModel = 0x800AC310; // type:func
IsRoomObjInvalid = 0x800AC4F0; // type:func
GetRoomObjCount = 0x800AC554; // type:func
IsRoomActInvalid = 0x800AC5B4; // type:func
GetRoomActCount = 0x800AC5D4; // type:func
IsCollectableInvalid = 0x800AC634; // type:func
GetCollectableCount = 0x800AC654; // type:func
IsRoomInvalid = 0x800AC6B4; // type:func
GetRoomCount = 0x800AC6D4; // type:func
IsSpriteActInvalid = 0x800AC734; // type:func
GetSpriteActCount = 0x800AC754; // type:func
setCrownPositionsForRoom = 0x800ACEDC; // type:func
checkRoomItem = 0x800ACF90; // type:func
EraseRoomItem = 0x800AD190; // type:func

ComputeBoundingBoxFromRects = 0x800A71C0; // type:func
AdjustRectToVec3 = 0x800A72A0; // type:func
Rect_Expand = 0x800A735C; // type:func
OrderRectBounds = 0x800A73AC; // type:func
IfRectsIntersect = 0x800A7414; // type:func
IsPointInRect = 0x800A7510; // type:func
CalculateBoundingRectFromVectors = 0x800A75D8; // type:func

//vector.c
WrapAngle = 0x800D057C; // type:func
CompareWrappedAngles = 0x800D05E0; // type:func

OnlyCheckPolyInfoLevel = 0x800D0A9C; // type:func

ProjectOnPolygon = 0x800D0B4C; // type:func
WorldToLocal = 0x800D0C44; // type:func
LocalToWorld = 0x800D0D3C; // type:func
IsInsidePolygon = 0x800D0E3C; // type:func
IsOnPolygon = 0x800D0F10; // type:func
RotateVector3D = 0x800D0FE0; // type:func
IsNearPoint = 0x800D1130; // type:func
Vec3f_Equals = 0x800D11B0; // type:func
Vec3f_EqualsCopy = 0x800D1214; // type:func
Vec3f_Set = 0x800D1278; // type:func
Vec3f_Zero = 0x800D1298; // type:func


Controller_Zero = 0x8004B4F0; // type:func

//random vars
Battle_GameType = 0x801813f0;
gCurrentZone = 0x8024AF38;
gActorCount = 0x80174C24;
gCurrentStage = 0x801806FC; //size:0x4
VertextBufferCount = 0x80217420; // type:s32
TriangleBufferCount = 0x80217424; // type:s32
ModelBufferCount = 0x80217428; // type:s32
gFieldCount = 0x80249f20; // type:s32 size:0x4
gZoneFields = 0x8024AF40;
StageFlags = 0x80180708;
sBossIDs = 0x80113B70;
gActors = 0x80176ae8; // size:0x5d00
Poles = 0x8017c7e8;
gCurrentActivePlayerPointer = 0x801806E0; // size:0x4
gTongueOnePointer = 0x801806E4; // size:0x4
gPlayerActors = 0x80174C28; // size:0x4c0
gTongues = 0x801750E8; // size:0x1830

//rodata
D_80115DBC = 0x80115DBC; // type:f32 force_migration:True size:0x08


